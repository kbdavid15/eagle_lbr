#include "json.inc"

string apiKey = "0c9d5f73";
char gs = 29;

string chrrep(string str,char a,char b){
	for(int i = 0;i<strlen(str);i++){
		if(str[i]==a){
			str[i] = b;
		}
	}
	return(str);
}

string octopartSearch(string mpn) {
	string match_url = "http://octopart.com/api/v3/parts/match?";
	string query = "queries=[{\"mpn\": \"" + mpn + "\"}]";
	query += "&apikey=" + apiKey;
	query += "&include[]=specs";

	string Result;
	if (netget(Result, match_url + query) >= 0) {
		// process results
		return(Result);
	}
	else {
		dlgMessageBox(neterror());
	}
	return "";
}

string process_octopart_result(string json_text) {
	string keylist = json_GetKeyList(json_text);
	if (strstr(keylist, "results") < 0) {
		dlgMessageBox("Incorrect result format:\n" + keylist);
		return "Incorrect result format:\n" + keylist;
	}
	string results = json_GetKeyItem(json_text, "results");
	string first_result = json_GetArrayItem(results, 0);	// get the first result items
	string items = json_GetKeyItem(first_result, "items");
	string first_item = json_GetArrayItem(items, 0);	//TODO: Show multiple items for selection
	string specs = json_GetKeyItem(first_item, "specs");
	string mpn = json_GetKeyItem(first_item, "mpn");
	string manuf_obj = json_GetKeyItem(first_item, "manufacturer");
	string manuf = json_GetKeyItem(manuf_obj, "name");

	string ret_val = "manufacturer\t" + manuf + gs;
	ret_val += "mpn\t" + mpn + gs;

	// process specs
	string speclist[];
	strsplit(speclist, json_GetKeyList(specs), '\t');

	for (int i = 0; speclist[i]; i++) {
		string spec_obj = json_GetKeyItem(specs, speclist[i]);
		string display_val = json_GetKeyItem(spec_obj, "display_value");
		ret_val += speclist[i] + "\t" + display_val + gs;
	}

	return ret_val;
}

void CreatePartWithAttributes() {

}

void main(void){
	string json_data;
	int idx;
	int array_idx;
	int idx2;
	string strResult;
	string key;
	string mpn_search = "RK73H1ET*3302F";
	string attributes[];
	string listHeader = "Name\tValue";
	int Selected = 0;
	int selected_pkg = 0;
	int selected_sym = 0;
	string searchHistory[];

	dlgDialog("Octopart API Attribute Data") {
		dlgVBoxLayout {
			dlgHBoxLayout {
				dlgStretch(0);
				dlgLabel("Enter part to search Octopart");
				dlgStringEdit(mpn_search, searchHistory, 100);
				dlgPushButton("+&Search") {
					json_data = octopartSearch(mpn_search);
					string results = process_octopart_result(json_data);
					strsplit(attributes, results, gs);
				}
				dlgSpacing(200);
			}
			dlgHBoxLayout {
				dlgSpacing(750);	// defines the width of the entire dialog
			}
			dlgHBoxLayout {				
				dlgVBoxLayout {
					dlgLabel("Part Attributes");
					dlgListView(listHeader, attributes, Selected) dlgMessageBox("You have selected " + attributes[Selected]);
				}
				dlgVBoxLayout {
					dlgLabel("Package");
					dlgListView(listHeader, attributes, selected_pkg) dlgMessageBox("You have selected " + attributes[selected_pkg]);
				}
				dlgVBoxLayout {
					dlgLabel("Symbol");
					dlgListView(listHeader, attributes, selected_sym) dlgMessageBox("You have selected " + attributes[selected_sym]);
				}
			}
			dlgHBoxLayout {
				dlgPushButton("Add attributes to existing part") {

				}
				dlgPushButton("Create new part") {

				}
			}
		}
	};
}
